{"version":3,"file":"static/js/779.a29c18ce.chunk.js","mappings":"4QAEMA,EAAM,mCAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAM,sBAAuB,CAClDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBR,IAAM,uBAAD,OAAwBQ,GAAc,CAChEP,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEASA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAwBC,GAAxB,uFAAiCC,EAAjC,+BAAwC,QACzCC,EAAU,GADT,KAEGD,EAFH,OAGE,UAHF,OAME,YANF,OASE,YATF,sCAaDC,EAAO,gBAAYF,GAblB,mCAODE,EAAO,gBAAYF,EAAZ,YAPN,mCAUDE,EAAO,gBAAYF,EAAZ,YAVN,gCAgBLG,QAAQC,IAAI,OAAQH,EAAM,UAAWC,IAEjCA,EAlBC,kCAmBoBZ,IAAMY,EAAS,CACpCX,OAAQ,CACNC,QAASJ,KArBV,eAmBGM,EAnBH,yBAwBIA,EAASC,MAxBb,oEArBPL,IAAAA,SAAAA,QAAyB,+B,iHCFZe,EAAOC,EAAAA,GAAAA,EAAH,mFAMJC,EAAQD,EAAAA,GAAAA,GAAH,kH,SCmBlB,MAvBA,WACE,IAAME,GAAQC,EAAAA,EAAAA,MACd,GAAKD,EACL,OACE,8BAC4B,IAAzBA,EAAMZ,QAAQc,QACb,SAACL,EAAD,uDAEA,wBACGG,EAAMZ,QAAQe,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACrC,OACE,2BACE,SAACP,EAAD,UAAQK,KACR,SAACP,EAAD,UAAOQ,MAFAC,EAKZ,OAKV,C,gLCrBYC,EAAgB,WAC3B,IAAQf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA0BiB,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcU,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQpB,EAAAA,EAAAA,IAASC,GAASoB,MAAK,SAAAC,GAC3BH,EAASG,EACV,IAHH,4CADc,sBAMVrB,GANW,WAAD,wBAMDsB,EACd,GAAE,CAACtB,IACGQ,CACR,EACYe,EAAuB,WAClC,IAAQvB,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA0BiB,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcU,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQpB,EAAAA,EAAAA,IAASC,EAAS,WAAQoB,KAAKF,GADvC,4CADc,sBAIVlB,GAJW,WAAD,wBAIDsB,EACd,GAAE,CAACtB,IACGQ,CACR,EAEYC,EAAuB,WAClC,IAAQT,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAA0BiB,EAAAA,EAAAA,UAAS,MAAnC,eAAOT,EAAP,KAAcU,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,+FACQpB,EAAAA,EAAAA,IAASC,EAAS,WAAWoB,KAAKF,GAD1C,4CADc,sBAIVlB,GAJW,WAAD,wBAIDsB,EACd,GAAE,CAACtB,IACGQ,CACR,C","sources":["api/api.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","hooks/useFetchMovie.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'b2380104f6a4d3099e2f62e25dfd4988';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTreending() {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovies(movieTitle) {\n  const response = await axios(`/search/movie?query=${movieTitle}`, {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\nexport async function getMovie(movieId, path = 'movie') {\n  let pathUrl = '';\n  switch (path) {\n    case 'movie':\n      pathUrl = `movie/${movieId}`;\n      break;\n    case 'çast':\n      pathUrl = `movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      pathUrl = `movie/${movieId}/reviews`;\n      break;\n    default:\n      pathUrl = `movie/${movieId}`;\n      break;\n  }\n  console.log('path', path, 'pathUrl', pathUrl);\n\n  if (pathUrl) {\n    const response = await axios(pathUrl, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  }\n}\n\n// export async function fetchMoviesById(movieId) {\n// const response = await axios(`movie/${movieId}`, {\n//   params: {\n//     api_key: KEY,\n//   },\n// });\n// return response.data;\n// }\n\n// export async function fetchMoviesByIdCredits(movieId) {\n//   const response = await axios(`movie/${movieId}/credits`, {\n//     params: {\n//       api_key: KEY,\n//     },\n//   });\n//   return response.data;\n// }\n\n// export async function fetchMoviesByIdReviews(movieId) {\n//   const response = await axios(`movie/${movieId}/reviews`, {\n//     params: {\n//       api_key: KEY,\n//     },\n//   });\n//   return response.data;\n// }\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  color: white;\n`;\n\nexport const Title = styled.h2`\n  font-size: 30px;\n  text-decoration: underline;\n  font-weight: bold;\n  color: white;\n`;\n","import React from 'react';\nimport { useFetchMovieReviews } from 'hooks/useFetchMovie';\nimport { Text, Title } from './Reviews.styled';\n\nfunction Reviews() {\n  const movie = useFetchMovieReviews();\n  if (!movie) return;\n  return (\n    <>\n      {movie.results.length === 0 ? (\n        <Text>We dont have any reviews for this movie</Text>\n      ) : (\n        <ul>\n          {movie.results.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <Title>{author}</Title>\n                <Text>{content}</Text>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovie } from 'api/api';\n\nexport const useFetchMovie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function getIm() {\n      await getMovie(movieId).then(res => {\n        setMovie(res);\n      });\n    }\n    if (movieId) getIm();\n  }, [movieId]);\n  return movie;\n};\nexport const useFetchMovieCredits = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function getIm() {\n      await getMovie(movieId, 'çast').then(setMovie);\n    }\n    if (movieId) getIm();\n  }, [movieId]);\n  return movie;\n};\n//\nexport const useFetchMovieReviews = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function getIm() {\n      await getMovie(movieId, 'reviews').then(setMovie);\n    }\n    if (movieId) getIm();\n  }, [movieId]);\n  return movie;\n};\n"],"names":["KEY","fetchTreending","axios","params","api_key","size","response","data","results","fetchMovies","movieTitle","getMovie","movieId","path","pathUrl","console","log","Text","styled","Title","movie","useFetchMovieReviews","length","map","author","content","id","useFetchMovie","useParams","useState","setMovie","useEffect","then","res","getIm","useFetchMovieCredits"],"sourceRoot":""}