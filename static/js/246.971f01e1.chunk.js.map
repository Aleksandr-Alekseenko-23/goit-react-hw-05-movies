{"version":3,"file":"static/js/246.971f01e1.chunk.js","mappings":"4QAEMA,EAAM,mCAIL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAM,sBAAuB,CAClDC,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEAUA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBR,IAAM,uBAAD,OAAwBQ,GAAc,CAChEP,OAAQ,CACNC,QAASJ,EACTK,KAAM,MAJL,cACCC,EADD,yBAOEA,EAASC,KAAKC,SAPhB,kEASA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAAwBC,GAAxB,uFAAiCC,EAAjC,+BAAwC,QACzCC,EAAU,GADT,KAEGD,EAFH,OAGE,UAHF,OAME,YANF,OASE,YATF,sCAaDC,EAAO,gBAAYF,GAblB,mCAODE,EAAO,gBAAYF,EAAZ,YAPN,mCAUDE,EAAO,gBAAYF,EAAZ,YAVN,iCAiBDE,EAjBC,kCAkBoBZ,IAAMY,EAAS,CACpCX,OAAQ,CACNC,QAASJ,KApBV,eAkBGM,EAlBH,yBAuBIA,EAASC,MAvBb,oEArBPL,IAAAA,SAAAA,QAAyB,+B,yKCDZa,EAAOC,EAAAA,GAAAA,GAAH,qHAMJC,EAAQD,EAAAA,GAAAA,IAAH,4FAOLE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,wLAYRI,EAAOJ,EAAAA,GAAAA,EAAH,mR,4ICHjB,MApBA,YACE,OADkC,EAAZK,SACNC,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,YAChC,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAUC,GAAE,kBAAaF,GAAzB,WACE,SAAC,KAAD,CACEG,IACEF,EAAW,6CAC+BA,GACtCG,EAENC,IAAKN,KAEP,SAAC,KAAD,UAAOA,QAVAC,EAcd,GACF,E,UCCD,EAlBiB,WACf,OAAgCM,EAAAA,EAAAA,UAAS,IAAzC,eAAOT,EAAP,KAAiBU,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACR/B,EAAAA,EAAAA,MAAiBgC,KAAKF,EACvB,GAAE,KAGD,iCACE,SAAC,KAAD,KACA,SAAC,KAAD,8BACA,SAAC,KAAD,WACE,SAAC,EAAD,CAAcV,SAAUA,QAI/B,C,6GCpBYa,EAAWlB,EAAAA,GAAAA,GAAH,2GAORmB,EAAOnB,EAAAA,GAAAA,GAAH,4EAMMA,EAAAA,GAAAA,IAAH,qI","sources":["api/api.jsx","components/HomePageItem/HomePageItem.styled.js","components/HomePageItem/HomePageItem.jsx","page/HomePage/HomePage.jsx","page/HomePage/HomePage.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = 'b2380104f6a4d3099e2f62e25dfd4988';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTreending() {\n  const response = await axios('/trending/movie/day', {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\n\nexport async function fetchMovies(movieTitle) {\n  const response = await axios(`/search/movie?query=${movieTitle}`, {\n    params: {\n      api_key: KEY,\n      size: 20,\n    },\n  });\n  return response.data.results;\n}\nexport async function getMovie(movieId, path = 'movie') {\n  let pathUrl = '';\n  switch (path) {\n    case 'movie':\n      pathUrl = `movie/${movieId}`;\n      break;\n    case 'Ã§ast':\n      pathUrl = `movie/${movieId}/credits`;\n      break;\n    case 'reviews':\n      pathUrl = `movie/${movieId}/reviews`;\n      break;\n    default:\n      pathUrl = `movie/${movieId}`;\n      break;\n  }\n\n  if (pathUrl) {\n    const response = await axios(pathUrl, {\n      params: {\n        api_key: KEY,\n      },\n    });\n    return response.data;\n  }\n}\n\n// export async function fetchMoviesById(movieId) {\n// const response = await axios(`movie/${movieId}`, {\n//   params: {\n//     api_key: KEY,\n//   },\n// });\n// return response.data;\n// }\n\n// export async function fetchMoviesByIdCredits(movieId) {\n//   const response = await axios(`movie/${movieId}/credits`, {\n//     params: {\n//       api_key: KEY,\n//     },\n//   });\n//   return response.data;\n// }\n\n// export async function fetchMoviesByIdReviews(movieId) {\n//   const response = await axios(`movie/${movieId}/reviews`, {\n//     params: {\n//       api_key: KEY,\n//     },\n//   });\n//   return response.data;\n// }\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Item = styled.li`\n  flex-basis: calc(((100% - ((5) - 1) * 30px)) / 5);\n  margin-right: 0px;\n  flex-grow: 1;\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n`;\n\nexport const LinkHome = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  list-style: none;\n  text-decoration: none;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  margin: 0px;\n  background-color: black;\n  border-bottom: 1px solid black;\n  border-left: 1px solid black;\n  border-right: 1px solid black;\n  color: white;\n  list-style: none;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`;\n","import React from 'react';\nimport { Item, Image, LinkHome, Text } from './HomePageItem.styled.js';\nimport PropTypes from 'prop-types';\nimport imageAs from './../../assets/img/NoPhotos.png';\n\nfunction HomePageItem({ trending }) {\n  return trending.map(({ title, id, poster_path }) => {\n    return (\n      <Item key={id}>\n        <LinkHome to={`/movies/${id}`}>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/original${poster_path}`\n                : imageAs\n            }\n            alt={title}\n          />\n          <Text>{title}</Text>\n        </LinkHome>\n      </Item>\n    );\n  });\n}\n\nexport default HomePageItem;\n\nHomePageItem.propTypes = {\n  trending: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchTreending } from 'api/api';\nimport HomePageItem from 'components/HomePageItem/HomePageItem';\nimport { TitleOne, List } from './HomePage.styled.js';\n\nconst HomePage = () => {\n  const [trending, setTrending] = useState([]);\n\n  useEffect(() => {\n    fetchTreending().then(setTrending);\n  }, []);\n\n  return (\n    <>\n      <Outlet />\n      <TitleOne>Trending today</TitleOne>\n      <List>\n        <HomePageItem trending={trending} />\n      </List>\n    </>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const TitleOne = styled.h1`\n  font-size: 100px;\n  font-weight: bold;\n  color: white;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  width: 1200px;\n`;\n"],"names":["KEY","fetchTreending","axios","params","api_key","size","response","data","results","fetchMovies","movieTitle","getMovie","movieId","path","pathUrl","Item","styled","Image","LinkHome","NavLink","Text","trending","map","title","id","poster_path","to","src","imageAs","alt","useState","setTrending","useEffect","then","TitleOne","List"],"sourceRoot":""}